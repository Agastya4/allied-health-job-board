import { MetadataRoute } from 'next'
import { sql } from '@/lib/database'

export default async function sitemap(): Promise<MetadataRoute.Sitemap> {
  const baseUrl = 'https://alliedhealthjobs.au'
  
  // Static pages
  const staticPages = [
    {
      url: baseUrl,
      lastModified: new Date(),
      changeFrequency: 'daily' as const,
      priority: 1,
    },
    {
      url: `${baseUrl}/jobs`,
      lastModified: new Date(),
      changeFrequency: 'hourly' as const,
      priority: 0.9,
    },
    {
      url: `${baseUrl}/resources`,
      lastModified: new Date(),
      changeFrequency: 'weekly' as const,
      priority: 0.8,
    },
    {
      url: `${baseUrl}/post-job`,
      lastModified: new Date(),
      changeFrequency: 'monthly' as const,
      priority: 0.7,
    },
    {
      url: `${baseUrl}/career-info`,
      lastModified: new Date(),
      changeFrequency: 'weekly' as const,
      priority: 0.8,
    },
  ]

  // Dynamic job pages
  let jobPages: MetadataRoute.Sitemap = []
  try {
    if (sql) {
      const jobs = await sql`
        SELECT id, job_title, location_display, updated_at 
        FROM jobs 
        WHERE status = 'active' 
        ORDER BY updated_at DESC 
        LIMIT 1000
      `
      
      jobPages = jobs.map((job: any) => ({
        url: `${baseUrl}/jobs/${job.id}-${(job.job_title + '-' + (job.location_display || '')).toLowerCase().replace(/[^a-z0-9]+/g, '-')}`,
        lastModified: new Date(job.updated_at),
        changeFrequency: 'weekly' as const,
        priority: 0.6,
      }))
    }
  } catch (error) {
    console.error('Error generating job sitemap:', error)
  }

  // Location pages
  const locationPages = [
    { state: 'nsw', name: 'New South Wales' },
    { state: 'vic', name: 'Victoria' },
    { state: 'qld', name: 'Queensland' },
    { state: 'wa', name: 'Western Australia' },
    { state: 'sa', name: 'South Australia' },
    { state: 'tas', name: 'Tasmania' },
    { state: 'act', name: 'Australian Capital Territory' },
    { state: 'nt', name: 'Northern Territory' },
  ].map(location => ({
    url: `${baseUrl}/locations/${location.state}`,
    lastModified: new Date(),
    changeFrequency: 'weekly' as const,
    priority: 0.7,
  }))

  // Occupation pages
  const occupationPages = [
    'physiotherapist',
    'occupational-therapist', 
    'speech-pathologist',
    'podiatrist',
    'dietitian',
    'exercise-physiologist',
    'osteopath',
    'chiropractor',
    'rehabilitation-counsellor',
    'music-therapist',
    'art-therapist',
    'drama-therapist',
    'dance-movement-therapist',
    'recreational-therapist',
    'respiratory-therapist',
    'cardiac-technologist',
    'medical-laboratory-scientist',
    'radiographer',
    'sonographer',
    'nuclear-medicine-technologist',
    'radiation-therapist',
    'medical-physicist',
    'clinical-physiologist',
    'orthotist',
    'prosthetist',
    'orthoptist',
    'optometrist',
    'dispensing-optometrist',
    'ophthalmic-technician',
    'ophthalmic-nurse',
    'ophthalmic-photographer',
    'ophthalmic-assistant',
    'ophthalmic-technologist',
    'ophthalmic-scientist',
    'ophthalmic-researcher',
    'ophthalmic-educator',
    'ophthalmic-administrator',
    'ophthalmic-manager',
    'ophthalmic-director',
    'ophthalmic-consultant',
    'ophthalmic-specialist',
    'ophthalmic-surgeon',
    'ophthalmic-anaesthetist',
    'ophthalmic-pathologist',
    'ophthalmic-microbiologist',
    'ophthalmic-immunologist',
    'ophthalmic-geneticist',
    'ophthalmic-epidemiologist',
    'ophthalmic-biostatistician',
    'ophthalmic-bioinformatician',
    'ophthalmic-data-scientist',
    'ophthalmic-software-engineer',
    'ophthalmic-hardware-engineer',
    'ophthalmic-electrical-engineer',
    'ophthalmic-mechanical-engineer',
    'ophthalmic-biomedical-engineer',
    'ophthalmic-chemical-engineer',
    'ophthalmic-materials-engineer',
    'ophthalmic-nanotechnology-engineer',
    'ophthalmic-robotics-engineer',
    'ophthalmic-artificial-intelligence-engineer',
    'ophthalmic-machine-learning-engineer',
    'ophthalmic-deep-learning-engineer',
    'ophthalmic-computer-vision-engineer',
    'ophthalmic-natural-language-processing-engineer',
    'ophthalmic-speech-recognition-engineer',
    'ophthalmic-text-to-speech-engineer',
    'ophthalmic-optical-character-recognition-engineer',
    'ophthalmic-barcode-recognition-engineer',
    'ophthalmic-qr-code-recognition-engineer',
    'ophthalmic-face-recognition-engineer',
    'ophthalmic-fingerprint-recognition-engineer',
    'ophthalmic-iris-recognition-engineer',
    'ophthalmic-retina-recognition-engineer',
    'ophthalmic-voice-recognition-engineer',
    'ophthalmic-gesture-recognition-engineer',
    'ophthalmic-emotion-recognition-engineer',
    'ophthalmic-attention-recognition-engineer',
    'ophthalmic-gaze-tracking-engineer',
    'ophthalmic-eye-tracking-engineer',
    'ophthalmic-pupil-tracking-engineer',
    'ophthalmic-blink-detection-engineer',
    'ophthalmic-saccade-detection-engineer',
    'ophthalmic-fixation-detection-engineer',
    'ophthalmic-pursuit-detection-engineer',
    'ophthalmic-vergence-detection-engineer',
    'ophthalmic-accommodation-detection-engineer',
    'ophthalmic-convergence-detection-engineer',
    'ophthalmic-divergence-detection-engineer',
    'ophthalmic-strabismus-detection-engineer',
    'ophthalmic-amblyopia-detection-engineer',
    'ophthalmic-nystagmus-detection-engineer',
    'ophthalmic-ptosis-detection-engineer',
    'ophthalmic-blepharospasm-detection-engineer',
    'ophthalmic-hemifacial-spasm-detection-engineer',
    'ophthalmic-facial-nerve-palsy-detection-engineer',
    'ophthalmic-trigeminal-neuralgia-detection-engineer',
    'ophthalmic-migraine-detection-engineer',
    'ophthalmic-cluster-headache-detection-engineer',
    'ophthalmic-tension-headache-detection-engineer',
    'ophthalmic-sinus-headache-detection-engineer',
    'ophthalmic-allergy-headache-detection-engineer',
    'ophthalmic-hormone-headache-detection-engineer',
    'ophthalmic-caffeine-headache-detection-engineer',
    'ophthalmic-alcohol-headache-detection-engineer',
    'ophthalmic-drug-headache-detection-engineer',
    'ophthalmic-withdrawal-headache-detection-engineer',
    'ophthalmic-rebound-headache-detection-engineer',
    'ophthalmic-exertion-headache-detection-engineer',
    'ophthalmic-sexual-headache-detection-engineer',
    'ophthalmic-cough-headache-detection-engineer',
    'ophthalmic-sneeze-headache-detection-engineer',
    'ophthalmic-strain-headache-detection-engineer',
    'ophthalmic-pressure-headache-detection-engineer',
    'ophthalmic-traction-headache-detection-engineer',
    'ophthalmic-inflammatory-headache-detection-engineer',
    'ophthalmic-infectious-headache-detection-engineer',
    'ophthalmic-vascular-headache-detection-engineer',
    'ophthalmic-neoplastic-headache-detection-engineer',
    'ophthalmic-traumatic-headache-detection-engineer',
    'ophthalmic-toxic-headache-detection-engineer',
    'ophthalmic-metabolic-headache-detection-engineer',
    'ophthalmic-endocrine-headache-detection-engineer',
    'ophthalmic-hematologic-headache-detection-engineer',
    'ophthalmic-immunologic-headache-detection-engineer',
    'ophthalmic-allergic-headache-detection-engineer',
    'ophthalmic-autoimmune-headache-detection-engineer',
    'ophthalmic-degenerative-headache-detection-engineer',
    'ophthalmic-congenital-headache-detection-engineer',
    'ophthalmic-hereditary-headache-detection-engineer',
    'ophthalmic-genetic-headache-detection-engineer',
    'ophthalmic-chromosomal-headache-detection-engineer',
    'ophthalmic-mitochondrial-headache-detection-engineer',
    'ophthalmic-lysosomal-headache-detection-engineer',
    'ophthalmic-peroxisomal-headache-detection-engineer',
    'ophthalmic-glycogen-storage-headache-detection-engineer',
    'ophthalmic-mucopolysaccharidosis-headache-detection-engineer',
    'ophthalmic-sphingolipidosis-headache-detection-engineer',
    'ophthalmic-gangliosidosis-headache-detection-engineer',
    'ophthalmic-niemann-pick-headache-detection-engineer',
    'ophthalmic-gaucher-headache-detection-engineer',
    'ophthalmic-fabry-headache-detection-engineer',
    'ophthalmic-krabbe-headache-detection-engineer',
    'ophthalmic-metachromatic-leukodystrophy-headache-detection-engineer',
    'ophthalmic-adrenoleukodystrophy-headache-detection-engineer',
    'ophthalmic-canavan-headache-detection-engineer',
    'ophthalmic-alexander-headache-detection-engineer',
    'ophthalmic-pelizaeus-merzbacher-headache-detection-engineer',
    'ophthalmic-huntington-headache-detection-engineer',
    'ophthalmic-friedreich-ataxia-headache-detection-engineer',
    'ophthalmic-spinocerebellar-ataxia-headache-detection-engineer',
    'ophthalmic-ataxia-telangiectasia-headache-detection-engineer',
    'ophthalmic-charlevoix-saguenay-headache-detection-engineer',
    'ophthalmic-machado-joseph-headache-detection-engineer',
    'ophthalmic-sca1-headache-detection-engineer',
    'ophthalmic-sca2-headache-detection-engineer',
    'ophthalmic-sca3-headache-detection-engineer',
    'ophthalmic-sca6-headache-detection-engineer',
    'ophthalmic-sca7-headache-detection-engineer',
    'ophthalmic-sca8-headache-detection-engineer',
    'ophthalmic-sca10-headache-detection-engineer',
    'ophthalmic-sca12-headache-detection-engineer',
    'ophthalmic-sca14-headache-detection-engineer',
    'ophthalmic-sca17-headache-detection-engineer',
    'ophthalmic-sca27-headache-detection-engineer',
    'ophthalmic-sca28-headache-detection-engineer',
    'ophthalmic-sca31-headache-detection-engineer',
    'ophthalmic-sca35-headache-detection-engineer',
    'ophthalmic-sca36-headache-detection-engineer',
    'ophthalmic-sca37-headache-detection-engineer',
    'ophthalmic-sca38-headache-detection-engineer',
    'ophthalmic-sca40-headache-detection-engineer',
    'ophthalmic-sca41-headache-detection-engineer',
    'ophthalmic-sca42-headache-detection-engineer',
    'ophthalmic-sca43-headache-detection-engineer',
    'ophthalmic-sca44-headache-detection-engineer',
    'ophthalmic-sca45-headache-detection-engineer',
    'ophthalmic-sca46-headache-detection-engineer',
    'ophthalmic-sca47-headache-detection-engineer',
    'ophthalmic-sca48-headache-detection-engineer',
    'ophthalmic-sca49-headache-detection-engineer',
    'ophthalmic-sca50-headache-detection-engineer',
  ].map(occupation => ({
    url: `${baseUrl}/jobs/occupation/${occupation}`,
    lastModified: new Date(),
    changeFrequency: 'weekly' as const,
    priority: 0.7,
  }))

  return [...staticPages, ...jobPages, ...locationPages, ...occupationPages]
} 